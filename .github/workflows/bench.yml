name: Rust Example
on:
  push:
    branches: [ main, rt-trace-dev ]
  pull_request:

permissions:
  contents: write
  deployments: write

jobs:
  benchmark:
    name: Run Rust benchmark example
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup toolchain update nightly && rustup default nightly
      - name: Run benchmark
        run: cargo bench --bench compare -- --output-format bencher | tee output.txt

      # Download previous benchmark result from cache (if exists)
      - name: Download previous benchmark data
        uses: actions/cache@v4
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark

      # Run `github-action-benchmark` action
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Rust Benchmark
          tool: 'cargo'
          output-file-path: output.txt
          # github-token: ${{ secrets.GITHUB_TOKEN }}
          # auto-push: true
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '200%'
          external-data-json-path: ./cache/benchmark-data.json
          comment-on-alert: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          fail-on-alert: true
          # alert-comment-cc-users: '@ktrz'

      # - name: Store benchmark result - separate results repo
      #   uses: benchmark-action/github-action-benchmark@v1
      #   with:
      #     name: Rust Benchmark
      #     tool: 'cargo'
      #     output-file-path: examples/rust/output.txt
      #     github-token: ${{ secrets.BENCHMARK_ACTION_BOT_TOKEN }}
      #     auto-push: true
      #     # Show alert with commit comment on detecting possible performance regression
      #     alert-threshold: '200%'
      #     summary-always: true
      #     comment-on-alert: true
      #     fail-on-alert: true
      #     alert-comment-cc-users: '@ktrz'
      #     gh-repository: 'github.com/benchmark-action/github-action-benchmark-results'
