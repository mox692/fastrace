name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    # branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-24.04
    env:
      FORCE_COLOR: 1
    steps:
      - uses: actions/checkout@v4
      # - uses: crate-ci/typos@master
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt, clippy
      - name: Cargo version
        run: cargo --version
      - name: Check format
        run: cargo fmt --all -- --check
      - name: Check clippy
        run: cargo clippy --all-targets --all-features -- --deny warnings

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]
        rust: [ "1.80.0", "stable", "nightly" ]
    env:
      RUST_BACKTRACE: 1
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: taiki-e/install-action@v2
        with:
          tool: nextest,cargo-nextest

      - name: Check format
        if: ${{ matrix.rust == 'nightly' }}
        run: cargo +${{ matrix.rust }} fmt -p rt-trace -- --check

      - name: Check clippy
        if: ${{ matrix.rust == 'nightly' }}
        run: cargo +${{ matrix.rust }} clippy -p rt-trace --all-targets --all-features -- --deny warnings

      - name: Build
        run: cargo +${{ matrix.rust }} build -p rt-trace --all-targets

      - name: Run tests
        run: |
          cargo +${{ matrix.rust }} test -p rt-trace --all-targets -- --nocapture
          cargo +${{ matrix.rust }} test -p rt-trace --doc

      # - name: Run examples
      #   run: |
      #     cargo +${{ matrix.rust }} run --example asynchronous
      #     cargo +${{ matrix.rust }} run --example synchronous
      #     cargo +${{ matrix.rust }} run --example get_started
      #     cargo +${{ matrix.rust }} run --package test-statically-disable
